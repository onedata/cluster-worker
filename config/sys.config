[
    %% kernel config for ccm distributed application
    {kernel, [
        {distributed, [{veil_cluster_node, 5000, ['nonode@nohost', {'nonode@nohost', 'nonode@nohost'}]}]},
        {sync_nodes_mandatory, ['nonode@nohost', 'nonode@nohost']},
        {sync_nodes_timeout, 60000}
    ]
    },

    %% SASL config
    {sasl, [{sasl_error_logger, false}]},

    %% logger configuration
    {lager, [
        {handlers, [
            %% show info level or higher level logs at console
            {lager_console_backend, info},
            %% rotate error log once a month (first day of month, 1 a.m) or when it reaches 1 GB; keep 1000 rotated logs
            {lager_file_backend, [{file, "log/error.log"}, {level, error}, {size, 1048576000}, {date, "$M1D1"}, {count, 1000}]},
            %% rotate info log once a week (friday at 11 p.m) or when it reaches 100 MB; keep 100 rotated logs
            {lager_file_backend, [{file, "log/info.log"}, {level, info}, {size, 104857600}, {date, "$W5D23"}, {count, 100}]},
            %% rotate info log once a day (at midnight) or when it reaches 10 MB; keep 10 rotated logs
            {lager_file_backend, [{file, "log/debug.log"}, {level, debug}, {size, 10485760}, {date, "$D0"}, {count, 10}]},
            {central_logging_backend, debug}
        ]},
        {error_logger_hwm, 200},
        % When lager should change mode to synchronous (log queue is longer than async_threshold)
        {async_threshold, 500},
        % When lager should return from mode to synchronous (log queue is shorter than (async_threshold - async_threshold_window)
        {async_threshold_window, 50}
    ]}%,

%%     % logging
%%     {ctool, [
%%         % Current loglevel in the cluster. Logs with lower importance will be completely discarded
%%         % Available loglevels are 0-7, respectively: debug, info, notice, warning, error, critical, alert, emergency
%%         {current_loglevel, 1},
%%         % Used to reset loglevel to default.
%%         % Available loglevels are 0-7, respectively: debug, info, notice, warning, error, critical, alert, emergency
%%         {default_loglevel, 1},
%%         % Determines whether the stacktrace should be included in logs (those that could contain it)
%%         {include_stacktrace, true}
%%     ]}
].