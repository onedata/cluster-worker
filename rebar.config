%% behaviours should be compiled before other files
{erl_first_files, ["src/veil_modules/worker_plugin_behaviour.erl"]}.

%% directory for releases
{sub_dirs, ["releases"]}.

%% options for documentation tool
{edoc_opts, [no_packages]}.

%% eunit opts - Maven-like output formatting
{eunit_opts, [verbose, {report, {eunit_surefire, [{dir, "../test/eunit_results"}]}}]}.

%% Test coverage
{cover_enabled, true}.

%% deps options
{deps, [
    {meck, ".*", {git, "https://github.com/eproxus/meck.git"}},
    {lager, ".*", {git, "git://github.com/basho/lager.git"}},
    {ranch, ".*", {git, "https://github.com/extend/ranch.git"}},
    {protobuffs, ".*", {git, "https://github.com/basho/erlang_protobuffs.git"}},
    {cowboy, ".*", {git, "git://github.com/extend/cowboy.git", {tag, "0.8.6"}}},
    {nitrogen_core, ".*", {git, "git://github.com/nitrogen/nitrogen_core.git", {tag, "v2.1.0"}}},
    {nprocreg, ".*", {git, "git://github.com/nitrogen/nprocreg.git"}},
    {simple_bridge, ".*", {git, "git://github.com/nitrogen/simple_bridge.git"}},
    {mimetypes, ".*", {git, "git://github.com/spawngrid/mimetypes.git"}},
    {gen_server_mock, ".*", {git, "git://github.com/brucexin/gen_server_mock.git"}},
    {yamler, ".*", {git, "git://github.com/goertzenator/yamler.git"}},
    {ibrowse, ".*", {git, "git://github.com/cmullaparthi/ibrowse.git"}},
    {basho_bench, ".*", {git, "git://github.com/RoXeon/basho_bench.git"}, [raw]}
]}.

%% pre-hooks
{pre_hooks, [
    {eunit, "mkdir -p test/eunit_results"}, %% Make dir for eunit' surefire test results
    {eunit, "epmd -daemon"}, %% Sometimes, in some cases epmd daemon doesn't start during eunit tests, so we need to force start it
    {compile, "chmod +x c_src/veilhelpers_nif/build_veilhelpers.sh"},
    {compile, "c_src/veilhelpers_nif/build_veilhelpers.sh"}
]}.

{post_hooks, [
    {compile, "chmod +x c_src/gpv_nif/link_globus.sh"},
    {compile, "./c_src/gpv_nif/link_globus.sh"}
]}.

%% Cleanup
{clean_files, ["test/eunit_results", "distributed_tests_out", "c_lib", "veilhelpers/build"]}.

%% logging 
{erl_opts, [{parse_transform, lager_transform}]}.

{port_specs, [
    {"c_lib/gpv_drv.so",["c_src/gpv_nif/grid_proxy_verify.c", "c_src/gpv_nif/gpv_nif.c"]},
    {"c_lib/veilhelpers_drv.so",["c_src/veilhelpers_nif/veilhelpers_nif.cc", "c_src/veilhelpers_nif/term_translator.cc"]}
]}.

{port_env, [
    {"linux", "LDFLAGS", "$LDFLAGS -lglobus_common -lssl -lcrypto -lglobus_gsi_callback -lveilhelpers -Wl,-rpath,./c_lib -Wl,-rpath,./c_lib -Wl,-rpath,../c_lib -Wl,-rpath,. -L ./c_lib"}, 
    {"linux", "CXXFLAGS", "$CXXFLAGS -I ./veilhelpers/include -D_FILE_OFFSET_BITS=64"}
]}.
