{plugins, [
    rebar3_hex,
    rebar3_elixir,
    {rebar_raw_resource, {git, "https://github.com/alertlogic/rebar_raw_resource", {branch, "master"}}}
]}.

{erl_first_files, [
    "src/graph_sync/gs_logic_plugin_behaviour.erl",
    "src/graph_sync/gs_protocol_plugin_behaviour.erl",
    "src/graph_sync/gs_translator_behaviour.erl"
]}.

{eunit_opts, [
    verbose,
    {report, {eunit_surefire, [{dir, "./test/eunit_results"}]}}
]}.

{cover_enabled, true}.

{dialyzer, [
    {warnings, [error_handling, unknown]},
    {plt_extra_apps, [ctool, cluster_manager, ranch, bp_tree, cberl, eunit, gen_server2, jiffy, mnesia, cberl, common_test, xmerl, ssl,
        macaroons, cowlib]}
]}.

{deps, [
    {ctool, {git, "ssh://git@git.onedata.org:7999/vfs/ctool.git", {ref, "ae6fa4883423"}}},
    {gui, {git, "ssh://git@git.onedata.org:7999/vfs/gui.git", {ref, "fdbeaff21f5c"}}},
    {cluster_manager, {raw, {git, "ssh://git@git.onedata.org:7999/vfs/cluster-manager.git", {ref, "3b666122b87c"}}}},
    {node_package, {git, "git://github.com/xorver/node_package.git", {branch, "2.0.1"}}},
    {locks, {git, "https://github.com/mistanisz/locks.git", {ref, "bcd43c0a783e"}}},
    {gen_server2, {git, "http://github.com/mistanisz/gen_server2.git", {branch, "master"}}},
    {cberl, "1.0.3", {git, "ssh://git@git.onedata.org:7999/vfs/cberl.git", {ref, "35c03121a7295"}}},
    {bp_tree, "1.0.0", {git, "https://github.com/onedata/bp_tree.git", {ref, "017fb4f"}}},
    {exometer_core, {git, "https://github.com/mistanisz/exometer_core", {ref, "0571a9a1b9e5"}}},
    {exometer_lager, {git, "https://github.com/onedata/exometer_lager.git", {ref, "3ee87b868b618fab43e5"}}},
    {exometer_graphite, {git, "https://github.com/mistanisz/exometer_graphite.git", {ref, "b08ce86a4337"}}},
    {worker_pool, {git, "https://github.com/inaka/worker_pool", {tag, "4.0.3"}}}
]}.

{pre_hooks, [
    {eunit, "mkdir -p test/eunit_results"}
]}.

{clean_files, [
    "./test/eunit_results",
    "./test_distributed/logs/*",
    "./test_distributed/*.beam"
]}.

{erl_opts, [
    {src_dirs, ["src"]}
]}.

{relx, [
    {release, {cluster_worker, "1.0.0"},
        [
            kernel,
            stdlib,
            os_mon,
            xmerl,
            sasl,
            public_key,
            crypto,
            ssl,
            lager,
            inets,
            mnesia,
            % All ctool deps will be included in the release package,
            % so there is no need to list them here.
            ctool,
            gui,
            %% deps included by default by reltool but not included by relx
            {base64url, load},
            {bp_tree, load},
            {cberl, load},
            certifi,
            {common_test, load},
            {debugger, load},
            {edoc, load},
            {enacl, load},
            {erts, load},
            {eunit, load},
            {gen_server2, load},
            hackney,
            {jiffy, load},
            {macaroons, load},
            {observer, load},
            {observer_cli, load},
            {runtime_tools, load},
            {snmp, load},
            {wx, load},
            cluster_worker
        ]},

    {vm_args, "rel/files/vm.args"},
    {sys_config, "rel/files/app.config"},
    {include_src, false},
    {dev_mode, true},
    % NOTE: {dev_mode, true} expands implicitly to {include_erts, false},
    % so we need this line AFTER the dev mode to override this setting
    {include_erts, true},

    {overlay, [
        %% Copy base files for starting and interacting w/ node
        {copy, "node_package/priv/base/erl", "erts-{{erts_vsn}}/bin/erl"},
        {copy, "node_package/priv/base/nodetool", "erts-{{erts_vsn}}/bin/nodetool"},
        {template, "node_package/priv/base/runner", "bin/cluster_worker"},
        {template, "node_package/priv/base/env.sh", "lib/env.sh"},

        %% Copy config files
        {mkdir, "etc"},
        {copy, "rel/files/autogenerated.config", "etc/autogenerated.config"},
        {template, "rel/files/vm.args", "etc/vm.args"},
        {copy, "cacerts", "./etc/"},
        {copy, "certs", "./etc/"},

        %% Copy additional data files
        {mkdir, "data"},
        {copy, "LICENSE.txt", "./data/"},
        {template, "rel/files/app.config", "./data/app.config"}
    ]},

    {extended_start_script, true}
]}.

{profiles, [
    {bamboo, [
        {relx, [{dev_mode, false}]},
        {post_hooks, [
            {release, "rm -rf _build/default/rel"},
            {release, "mv -f _build/bamboo/rel _build/default"},
            {release, "rm -rf _build/default/lib/cluster_worker"},
            {release, "mv -f _build/bamboo/lib/cluster_worker _build/default/lib"}
        ]}
    ]}
]}.
