%%%--------------------------------------------------------------------
%%% @author Michal Wrzeszcz
%%% @copyright (C) 2013 ACK CYFRONET AGH
%%% This software is released under the MIT license
%%% cited in 'LICENSE.txt'.
%%% @end
%%%--------------------------------------------------------------------
%%% @doc It is the description of application.
%%% @end
%%%--------------------------------------------------------------------
{application, cluster_worker,
    [
        {description, "Application starts node of oneprovider cluster"},
        {vsn, git},
        {registered, [cluster_worker_sup]},
        {applications, [
            kernel,
            stdlib,
            sasl,
            public_key,
            crypto,
            ssl2,
            % Meck is needed only for development purposes, should be removed before release.
            meck,
            % ctool already requires those apps below, but they are here
            % for awareness of them being used in the project and
            % to make sure they are started before the application.
            gproc,
            lager,
            ibrowse,
            cowboy
        ]},
        {mod, {cluster_worker_app, []}},
        {env, [

            %% ===================================================================
            %% GENERAL
            %% ===================================================================

            %% List of absolute paths to storages used by workers.
            {storage_paths, []},
            %% How long (in ms) should worker wait between heartbeats (when connected to ccm)
            {heartbeat_interval, 500},
            %% How long (in ms) should worker wait between next connection try (when not registered in ccm)
            {ccm_connection_retry_period, 1000},
            %% Memory size which stores information about worker load
            {worker_load_memory_size, 1000},
            %% Memory usage level above which caches will be cleared
            {mem_to_clear_cache, 80},
            %% How long task should wait between function calls (when function execution ends with error)
            {task_fail_sleep_time_ms, 1000},

            %% ===================================================================
            %% MISC
            %% ===================================================================

            %% Time in ms after healthcheck is considered failed
            {nagios_healthcheck_timeout, 5000},
            %% Time in ms that must have passed since last update of dispatcher
            %% or DNS to assume they are out of sync.
            {dns_disp_out_of_sync_threshold, 10000},
            %% List of protocols which will be available on http_worker_rest_port.
            {protocol_plugins, [rest_protocol_plugin, cdmi_protocol_plugin]}, %% todo remove (discover why needed despite moving to op_worker)

            %% ===================================================================
            %% DNS
            %% ===================================================================

            %% DNS port
            {dns_port, 53},
            %% How long dns response of type A remains valid (in sec)
            {dns_a_response_ttl, 60},
            %% How long dns response of type NS remains valid (in sec)
            {dns_ns_response_ttl, 600},
            %% Maximum supported UDP size, that will be advertised by the server (via EDNS). If a client advertises a bigger
            %% value, it will be assumed to be as high as this.
            {edns_max_udp_size, 1280},
            %% Number of dns tcp acceptors
            {dns_tcp_acceptor_pool_size, 20},
            %% Time (in sec) after which dns closes idle connection
            {dns_tcp_timeout_seconds, 20},

            %% ===================================================================
            %% DATASTORE
            %% ===================================================================

            %% Persistence driver to use in datastore.
            %% Supported values: couchbase_datastore_driver, riak_datastore_driver
            {persistence_driver_module, 'couchbase_datastore_driver'}
        ]}
    ]}.