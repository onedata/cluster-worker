#!/bin/bash

if [ $# -eq 1 ] && [ $1 == "-clean_up" ]; then
	mv releases/old_reltool.config releases/reltool.config 2>/dev/null
	mv releases/old_vars.config releases/vars.config 2>/dev/null
	exit 0
fi

# Simple validation of arguments
if [ $# -lt 4 ] || [ $1 != "-name" ] || [ $3 != "-main_ccm" ]; then

	# Check for .args file
	if [ $# -eq 0 ] && [ -f gen_dev.args ]; then
		ARGS=`cat gen_dev.args`
		echo 'Using arguments from gen_dev.args'
		./gen_dev $ARGS
		exit 0
	
	# Invalid arguments or absence of .args file
	else
		echo "Usage:"
		echo "	$0 -name node_name@host -main_ccm main_ccm_node@host [-opt_ccm opt_ccm_node1@host opt_ccm_node2@host ...] -db_nodes dbnode1@host dbnode2@host ..."
		echo " "
		echo "or:"
		echo "	$0 (file 'gen_dev.args' containing arguments present in script directory)"
		echo " "
		echo "after rebar ./generate:"
		echo "	$0 -clean_up (restores reltool.config to the original state)"
		exit 1
	fi
fi


# Variables with node name and main CCM name, initially this node is not a CCM node, string with CCM nodes initialized with main CCM
NODE_NAME=$2
AT_INDEX=`expr index "$2" @`
NODE_NAME_WITHOUT_HOSTNAME=${NODE_NAME:0:(($AT_INDEX - 1))}
MAIN_CCM_NAME=$4
IS_THIS_CCM=0
CCM_LIST="[\\\\\"\\\\\\\\'$MAIN_CCM_NAME\\\\\\\\'\\\\\""

# Get local IP address (used as cookie)
IFCONFIG_LINE=`ifconfig | grep "inet addr:.*Bcast:"`
COLON_INDEX=`expr index "$IFCONFIG_LINE" :`
BCAST_INDEX=`expr index "$IFCONFIG_LINE" Bcast`
COOKIE=${IFCONFIG_LINE:COLON_INDEX:((BCAST_INDEX - 2))}

# Check if this node is the main CCM node
if [ $NODE_NAME == $MAIN_CCM_NAME ]; then
	IS_THIS_CCM=1
fi

if [ $5 == "-opt_ccm" ]; then
	# Create list of CCM node names and check if this node is one of CCMs, break when -db_nodes is stumbled upon
	for (( INDEX=6; INDEX<=$#; INDEX++ ))
	do
		if [ "-db_nodes" == ${!INDEX} ]; then
			DB_NODES_LIST_INDEX=$(($INDEX + 1))
			break;
		fi

		CCM_LIST="$CCM_LIST,\\\\\"\\\\\\\\'${!INDEX}\\\\\\\\'\\\\\""
		if [ $NODE_NAME == ${!INDEX} ]; then
			IS_THIS_CCM=1
		fi
	done
else
	# No opt ccms, move to db nodes
	DB_NODES_LIST_INDEX=6
fi
CCM_LIST="$CCM_LIST]"

# Create list od DBMS nodes
DB_NODES_LIST="[\\\\\"\\\\\\\\'${!DB_NODES_LIST_INDEX}\\\\\\\\'\\\\\""
DB_NODES_LIST_INDEX=$(($DB_NODES_LIST_INDEX + 1))
for (( INDEX=DB_NODES_LIST_INDEX; INDEX<=$#; INDEX++ ))
do
	DB_NODES_LIST="$DB_NODES_LIST,\\\\\"\\\\\\\\'${!INDEX}\\\\\\\\'\\\\\""
done
DB_NODES_LIST="$DB_NODES_LIST]"

# Store original vars.config and reltool.config to be able to restore them
cp releases/vars.config releases/old_vars.config
cp releases/reltool.config releases/old_reltool.config

case $IS_THIS_CCM in
	# This node is a worker
	0)
		# Produce a proper vars.config file from template
		sed "s/\$CCM_LIST/$CCM_LIST/g; 
			s/\$NODE_NAME/$NODE_NAME/g; 
			s/\$DB_NODES_LIST/$DB_NODES_LIST/g; 
			s/\$COOKIE/$COOKIE/g; 
			/%%%/d" "releases/vars/worker_vars.config" > releases/vars.config
		;;


	# This node is a CCM 
	1)
		# The list with two elements - main CCM name and tuple with optional CCMs
		CCM_HIERARCHY_LIST="['$MAIN_CCM_NAME', {"
		if [ $# -gt 5 ]; then
			for (( INDEX=6; INDEX<=$#; INDEX++ ))
			do
				if [ "-db_nodes" == ${!INDEX} ]; then
					break;
				fi

				CCM_HIERARCHY_LIST="$CCM_HIERARCHY_LIST'${!INDEX}'"

				NEXT=$((INDEX + 1))
				if [ ${!NEXT} != "-db_nodes" ]; then
					CCM_HIERARCHY_LIST="$CCM_HIERARCHY_LIST, "
				fi
			done
		fi
		CCM_HIERARCHY_LIST="$CCM_HIERARCHY_LIST}]"

		# The list with CCMs to synchronize with, skip own node name
		SYNC_CCM_LIST="["
		if [ $NODE_NAME != $MAIN_CCM_NAME ]; then
			if [ $7 == "-db_nodes" ]; then
				SYNC_CCM_LIST="['$MAIN_CCM_NAME'"
			else
				SYNC_CCM_LIST="['$MAIN_CCM_NAME', "
			fi
		fi
		if [ $# -gt 5 ]; then
			for (( INDEX=6; INDEX<=$#; INDEX++ ))
			do
				if [ ${!INDEX} == "-db_nodes" ]; then
					break;
				fi

				if [ ${!INDEX} != $NODE_NAME ]; then
					SYNC_CCM_LIST="$SYNC_CCM_LIST'${!INDEX}'"

					NEXT=$((INDEX + 1))
					if [ ${!NEXT} != $NODE_NAME ] && [ ${!NEXT} != "-db_nodes" ]; then
						SYNC_CCM_LIST="$SYNC_CCM_LIST, "
					fi
				fi
			done
		fi
		SYNC_CCM_LIST="$SYNC_CCM_LIST]"

		# produce a proper vars.config file from template
		sed "s/\$CCM_HIERARCHY_LIST/$CCM_HIERARCHY_LIST/g; 
			s/\$SYNC_CCM_LIST/$SYNC_CCM_LIST/g; 
			s/\$CCM_LIST/$CCM_LIST/g; 
			s/\$NODE_NAME/$NODE_NAME/g; 
			s/\$DB_NODES_LIST/$DB_NODES_LIST/g; 
			s/\$COOKIE/$COOKIE/g; 
			/%%%/d" "releases/vars/ccm_vars.config" > releases/vars.config
		;;
esac

# Change target dir in reltool.config
sed -i "s/{target_dir,.*\\./{target_dir, \"$NODE_NAME_WITHOUT_HOSTNAME\"}./g" "releases/reltool.config"

exit 0