<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classveil_1_1client_1_1MetaCache" kind="class" prot="public">
    <compoundname>veil::client::MetaCache</compoundname>
    <basecompoundref refid="classveil_1_1client_1_1ISchedulable" prot="public" virt="non-virtual">veil::client::ISchedulable</basecompoundref>
    <includes refid="metaCache_8h" local="no">include/metaCache.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classveil_1_1client_1_1MetaCache_1a9ff0f146fdfac0d8355bbc75daf30131" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, std::pair&lt; time_t, struct stat &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::pair&lt;time_t, struct stat&gt; &gt; veil::client::MetaCache::m_statMap</definition>
        <argsstring></argsstring>
        <name>m_statMap</name>
        <briefdescription>
<para>This is the cache map. </para>        </briefdescription>
        <detaileddescription>
<para>Value of this std::map is std::pair containing expiration time of attributes and stat struct itself </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="29" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/metaCache.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classveil_1_1client_1_1MetaCache_1a30c4ec397ec0a74a6e597b6b83911e3f" prot="protected" static="no" mutable="no">
        <type><ref refid="classveil_1_1client_1_1ReadWriteLock" kindref="compound">ReadWriteLock</ref></type>
        <definition>ReadWriteLock veil::client::MetaCache::m_statMapLock</definition>
        <argsstring></argsstring>
        <name>m_statMapLock</name>
        <briefdescription>
<para>Lock used to synchronize access to <ref refid="classveil_1_1client_1_1MetaCache_1a9ff0f146fdfac0d8355bbc75daf30131" kindref="member">MetaCache::m_statMap</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="32" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/metaCache.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1a4730be216758a881ce7fdda2d1476148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>veil::client::MetaCache::MetaCache</definition>
        <argsstring>()</argsstring>
        <name>MetaCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="36" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1a19291e0cb5e9dc2c0e4559b3aae4ed6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>veil::client::MetaCache::~MetaCache</definition>
        <argsstring>()</argsstring>
        <name>~MetaCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="37" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1ad4f78d13b8fd4b07a50d759334bafe00" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void veil::client::MetaCache::addAttr</definition>
        <argsstring>(std::string, struct stat &amp;)</argsstring>
        <name>addAttr</name>
        <param>
          <type>std::string</type>
          <defname>path</defname>
        </param>
        <param>
          <type>struct stat &amp;</type>
          <defname>attr</defname>
        </param>
        <briefdescription>
<para>Cache given attributes Expiration time can be set using configuration file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="39" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="33" bodyend="51"/>
        <references refid="config_8h_1a191d80319f47247f03355583e7bee92e" compoundref="config_8h" startline="27">ENABLE_ATTR_CACHE_OPT</references>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a74a5d68dec5afbdd21d9e18d2e6da9b6" compoundref="lock_8h" startline="38">veil::client::WRITE_LOCK</references>
        <references refid="config_8h_1abc476da9d9b1ecef3504080ca2ff0210" compoundref="config_8h" startline="28">ATTR_CACHE_EXPIRATION_TIME_OPT</references>
        <references refid="config_8h_1aa387b18d58ae83d62a86786721b3bda3" compoundref="config_8h" startline="44">ATTR_DEFAULT_EXPIRATION_TIME</references>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1a50f2df722a09908506315124c548563e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void veil::client::MetaCache::clearAttrs</definition>
        <argsstring>()</argsstring>
        <name>clearAttrs</name>
        <briefdescription>
<para>Clear whole cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="41" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="66" bodyend="70"/>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a74a5d68dec5afbdd21d9e18d2e6da9b6" compoundref="lock_8h" startline="38">veil::client::WRITE_LOCK</references>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1af5b7f280f407f452765886317597d045" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool veil::client::MetaCache::getAttr</definition>
        <argsstring>(std::string, struct stat *)</argsstring>
        <name>getAttr</name>
        <param>
          <type>std::string</type>
          <defname>path</defname>
        </param>
        <param>
          <type>struct stat *</type>
          <defname>attr</defname>
        </param>
        <briefdescription>
<para>Gets file attributes from cache. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to stat structure that should be filled with data from cache </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Bool saying if operation succeed and stat struct was filled with data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="48" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="53" bodyend="64"/>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a378617bc95058da3e7787e260ee8b922" compoundref="lock_8h" startline="37">veil::client::READ_LOCK</references>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1a15abb5440a3d6533840eadb5b030b6ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void veil::client::MetaCache::clearAttr</definition>
        <argsstring>(std::string path)</argsstring>
        <name>clearAttr</name>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Remove cache for given file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="49" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="72" bodyend="79"/>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a74a5d68dec5afbdd21d9e18d2e6da9b6" compoundref="lock_8h" startline="38">veil::client::WRITE_LOCK</references>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1a4eb31cf2a0df30cc0701a92fe202026b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool veil::client::MetaCache::updateTimes</definition>
        <argsstring>(std::string path, time_t atime=0, time_t mtime=0, time_t ctime=0)</argsstring>
        <name>updateTimes</name>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>time_t</type>
          <declname>atime</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>time_t</type>
          <declname>mtime</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>time_t</type>
          <declname>ctime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Update *time meta attributes for specific file in cache. Returns true if cache was updated or false if given file wasn&apos;t found in cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="50" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="81" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1a44b863aeee1819ccc4f61a55afa70500" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool veil::client::MetaCache::updateSize</definition>
        <argsstring>(std::string path, size_t size)</argsstring>
        <name>updateSize</name>
        <param>
          <type>std::string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Update size meta attribute for specific file in cache. Returns true if cache was updated or false if given file wasn&apos;t found in cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="51" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="100" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1MetaCache_1a83dc719132343ba07427d9150bce9731" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool veil::client::MetaCache::runTask</definition>
        <argsstring>(TaskID taskId, std::string arg0, std::string arg1, std::string arg3)</argsstring>
        <name>runTask</name>
        <reimplements refid="classveil_1_1client_1_1ISchedulable_1ac81de45c4664e8aec85d42a6992c23e0">runTask</reimplements>
        <param>
          <type><ref refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68c" kindref="member">TaskID</ref></type>
          <declname>taskId</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
<para>Task runner derived from <ref refid="classveil_1_1client_1_1ISchedulable" kindref="compound">ISchedulable</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classveil_1_1client_1_1ISchedulable_1ac81de45c4664e8aec85d42a6992c23e0" kindref="member">ISchedulable::runTask</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="53" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/metaCache.cc" bodystart="113" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class responsible for caching file attributes. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classveil_1_1client_1_1VeilFS_1add9108b324f1c6eae48fa1180ea5da25" kindref="member">VeilFS::getattr</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="147">
        <label>veil::client::MetaCache</label>
        <link refid="classveil_1_1client_1_1MetaCache"/>
        <childnode refid="148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="149">
        <label>boost::enable_shared_from_this&lt; ISchedulable &gt;</label>
      </node>
      <node id="148">
        <label>veil::client::ISchedulable</label>
        <link refid="classveil_1_1client_1_1ISchedulable"/>
        <childnode refid="149" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="150">
        <label>veil::client::MetaCache</label>
        <link refid="classveil_1_1client_1_1MetaCache"/>
        <childnode refid="151" relation="public-inheritance">
        </childnode>
        <childnode refid="153" relation="usage">
          <edgelabel>m_statMapLock</edgelabel>
        </childnode>
        <childnode refid="154" relation="usage">
          <edgelabel>m_statMap</edgelabel>
        </childnode>
      </node>
      <node id="152">
        <label>boost::enable_shared_from_this&lt; ISchedulable &gt;</label>
      </node>
      <node id="154">
        <label>std::map&lt; std::string, std::pair&lt; time_t, struct stat &gt; &gt;</label>
        <childnode refid="155" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="156">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="151">
        <label>veil::client::ISchedulable</label>
        <link refid="classveil_1_1client_1_1ISchedulable"/>
        <childnode refid="152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="153">
        <label>veil::client::ReadWriteLock</label>
        <link refid="classveil_1_1client_1_1ReadWriteLock"/>
      </node>
      <node id="155">
        <label>std::string</label>
        <childnode refid="156" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/krzysztof/Desktop/veilclient/include/metaCache.h" line="27" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/metaCache.h" bodystart="26" bodyend="55"/>
    <listofallmembers>
      <member refid="classveil_1_1client_1_1MetaCache_1ad4f78d13b8fd4b07a50d759334bafe00" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>addAttr</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a15abb5440a3d6533840eadb5b030b6ba" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>clearAttr</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a50f2df722a09908506315124c548563e" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>clearAttrs</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1af5b7f280f407f452765886317597d045" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>getAttr</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a1971032ea8f78ff6345864c4e40d86bd" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>ISchedulable</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a9ff0f146fdfac0d8355bbc75daf30131" prot="protected" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>m_statMap</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a30c4ec397ec0a74a6e597b6b83911e3f" prot="protected" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>m_statMapLock</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a4730be216758a881ce7fdda2d1476148" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>MetaCache</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a83dc719132343ba07427d9150bce9731" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>runTask</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca5d7a79cedeac53743c9ca3e4f0a83246" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_ASYNC_GET_FILE_LOCATION</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac37d99797b742148014ece1b04070abd" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_ASYNC_GETATTR</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68caecf889af461568a10f6ecb5494d6287a" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_ASYNC_READDIR</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca6266ee7d508841ea9fc2418b40b47678" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_ASYNC_UPDATE_TIMES</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca8e8d2679b3902b3d4adb3afc265ae593" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_CLEAR_ATTR</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cab491b54b9730aaf11720b9847b0184c3" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_CLEAR_FILE_ATTR</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca9ba4bbf3c2c44cfcf351216bf7e4c42f" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_CONNECTION_HANDSHAKE</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cae14315bcb7937f992b1d6b503981ff18" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_LAST_ID</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca64e79be1054c363dd73740130b88aa53" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_PING_CLUSTER</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac62e13997a39b21ee57c98efdbc12826" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_REMOVE_EXPIRED_LOCATON_MAPPING</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca5ff3ad4ffdf1a48962fa88c183ddd253" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_RENEW_LOCATION_MAPPING</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac335b02a928670de1ce08a81b2c581db" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TASK_SEND_FILE_NOT_USED</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68c" prot="public" virt="non-virtual"><scope>veil::client::MetaCache</scope><name>TaskID</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a44b863aeee1819ccc4f61a55afa70500" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>updateSize</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a4eb31cf2a0df30cc0701a92fe202026b" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>updateTimes</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a1769e067935e32f90656086090a78548" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>~ISchedulable</name></member>
      <member refid="classveil_1_1client_1_1MetaCache_1a19291e0cb5e9dc2c0e4559b3aae4ed6d" prot="public" virt="virtual"><scope>veil::client::MetaCache</scope><name>~MetaCache</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
