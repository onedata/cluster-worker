<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classveil_1_1client_1_1ReadWriteLock" kind="class" prot="public">
    <compoundname>veil::client::ReadWriteLock</compoundname>
    <includes refid="lock_8h" local="no">include/lock.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classveil_1_1client_1_1ReadWriteLock_1a8c38826dae6f0ead4164b11be11b9a5b" prot="private" static="no" mutable="no">
        <type>pthread_cond_t</type>
        <definition>pthread_cond_t veil::client::ReadWriteLock::m_classCond</definition>
        <argsstring></argsstring>
        <name>m_classCond</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="52" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/lock.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1aadaa3d68d5c9e78fefdfa51b6a69efdc" compoundref="lock_8cc" startline="66" endline="74">ReadWriteLock</referencedby>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1ab5417066b530662f3c95c69f9a8a43e2" compoundref="lock_8cc" startline="80" endline="89">readLock</referencedby>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1aea77ddf8d924ebcef0558478a6f02d85" compoundref="lock_8cc" startline="91" endline="99">readUnlock</referencedby>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1adee8b77278d87c9d9c064a09bef67f2f" compoundref="lock_8cc" startline="101" endline="109">writeLock</referencedby>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1ae0f828f776cab85c7ab455f240c87bfe" compoundref="lock_8cc" startline="111" endline="117">writeUnlock</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classveil_1_1client_1_1ReadWriteLock_1a69e3d84b1701c831e098707980cb3b48" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int veil::client::ReadWriteLock::m_readers</definition>
        <argsstring></argsstring>
        <name>m_readers</name>
        <briefdescription>
<para>How many readers are in critical section right now. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="54" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/lock.h" bodystart="54" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1ab5417066b530662f3c95c69f9a8a43e2" compoundref="lock_8cc" startline="80" endline="89">readLock</referencedby>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1aea77ddf8d924ebcef0558478a6f02d85" compoundref="lock_8cc" startline="91" endline="99">readUnlock</referencedby>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1adee8b77278d87c9d9c064a09bef67f2f" compoundref="lock_8cc" startline="101" endline="109">writeLock</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classveil_1_1client_1_1ReadWriteLock_1a9e2c96682ba1862a83ad26b8283c669e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int veil::client::ReadWriteLock::m_writers</definition>
        <argsstring></argsstring>
        <name>m_writers</name>
        <briefdescription>
<para>How many writers are waitning in queue to access critical section. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="55" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/lock.h" bodystart="55" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1ab5417066b530662f3c95c69f9a8a43e2" compoundref="lock_8cc" startline="80" endline="89">readLock</referencedby>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1adee8b77278d87c9d9c064a09bef67f2f" compoundref="lock_8cc" startline="101" endline="109">writeLock</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classveil_1_1client_1_1ReadWriteLock_1a818f923768a5fadb25efef2d9945bb44" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int veil::client::ReadWriteLock::m_fairness</definition>
        <argsstring></argsstring>
        <name>m_fairness</name>
        <briefdescription>
<para>How many readers was in critical section since last writer left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="56" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/lock.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1ab5417066b530662f3c95c69f9a8a43e2" compoundref="lock_8cc" startline="80" endline="89">readLock</referencedby>
        <referencedby refid="classveil_1_1client_1_1ReadWriteLock_1ae0f828f776cab85c7ab455f240c87bfe" compoundref="lock_8cc" startline="111" endline="117">writeUnlock</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classveil_1_1client_1_1ReadWriteLock_1a716ab0c62de5655dcf9b5efe988073c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>veil::client::ReadWriteLock::DECLARE_MUTEX_FOR</definition>
        <argsstring>(m_class)</argsstring>
        <name>DECLARE_MUTEX_FOR</name>
        <param>
          <type>m_class</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1ReadWriteLock_1a30d561f79e69a1f2598b834b89fe6560" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>veil::client::ReadWriteLock::DECLARE_MUTEX_FOR</definition>
        <argsstring>(m_res)</argsstring>
        <name>DECLARE_MUTEX_FOR</name>
        <param>
          <type>m_res</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="51" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classveil_1_1client_1_1ReadWriteLock_1aadaa3d68d5c9e78fefdfa51b6a69efdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>veil::client::ReadWriteLock::ReadWriteLock</definition>
        <argsstring>()</argsstring>
        <name>ReadWriteLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="59" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/lock.cc" bodystart="66" bodyend="74"/>
        <references refid="lock_8h_1a8940e09ad454f6893ada60f5bb52f32e" compoundref="lock_8h" startline="24">INIT_MUTEX_FOR</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a8c38826dae6f0ead4164b11be11b9a5b" compoundref="lock_8h" startline="52">m_classCond</references>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1ReadWriteLock_1ac290afacde98d4acfc19689940d6e465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>veil::client::ReadWriteLock::~ReadWriteLock</definition>
        <argsstring>()</argsstring>
        <name>~ReadWriteLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="60" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/lock.cc" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1ReadWriteLock_1ab5417066b530662f3c95c69f9a8a43e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void veil::client::ReadWriteLock::readLock</definition>
        <argsstring>()</argsstring>
        <name>readLock</name>
        <briefdescription>
<para>Locks for read operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="62" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/lock.cc" bodystart="80" bodyend="89"/>
        <references refid="lock_8h_1a0c4f2a10324c79411362512f1e8e73c4" compoundref="lock_8h" startline="18">MUTEX</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a9e2c96682ba1862a83ad26b8283c669e" compoundref="lock_8h" startline="55">m_writers</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a818f923768a5fadb25efef2d9945bb44" compoundref="lock_8h" startline="56">m_fairness</references>
        <references refid="lock_8h_1a1709b36d65924eb14a54a2dff10c773c" compoundref="lock_8h" startline="15">FAIRNESS_LEVEL</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a8c38826dae6f0ead4164b11be11b9a5b" compoundref="lock_8h" startline="52">m_classCond</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a69e3d84b1701c831e098707980cb3b48" compoundref="lock_8h" startline="54">m_readers</references>
        <referencedby refid="classveil_1_1client_1_1AutoLock_1a7d95d6c91bec1806728a9ef6d65c2c15" compoundref="lock_8cc" startline="28" endline="42">veil::client::AutoLock::changeType</referencedby>
        <referencedby refid="classveil_1_1client_1_1AutoLock_1ad99d6f0e4a8b61f58127d9bba3924d6a" compoundref="lock_8cc" startline="55" endline="64">veil::client::AutoLock::lock</referencedby>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1ReadWriteLock_1aea77ddf8d924ebcef0558478a6f02d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void veil::client::ReadWriteLock::readUnlock</definition>
        <argsstring>()</argsstring>
        <name>readUnlock</name>
        <briefdescription>
<para>Unlocks read lock. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="63" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/lock.cc" bodystart="91" bodyend="99"/>
        <references refid="lock_8h_1a0c4f2a10324c79411362512f1e8e73c4" compoundref="lock_8h" startline="18">MUTEX</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a69e3d84b1701c831e098707980cb3b48" compoundref="lock_8h" startline="54">m_readers</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a8c38826dae6f0ead4164b11be11b9a5b" compoundref="lock_8h" startline="52">m_classCond</references>
        <referencedby refid="classveil_1_1client_1_1AutoLock_1a7d95d6c91bec1806728a9ef6d65c2c15" compoundref="lock_8cc" startline="28" endline="42">veil::client::AutoLock::changeType</referencedby>
        <referencedby refid="classveil_1_1client_1_1AutoLock_1a1c941a2b476c9869537e3e6690b1baf3" compoundref="lock_8cc" startline="44" endline="53">veil::client::AutoLock::release</referencedby>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1ReadWriteLock_1adee8b77278d87c9d9c064a09bef67f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void veil::client::ReadWriteLock::writeLock</definition>
        <argsstring>()</argsstring>
        <name>writeLock</name>
        <briefdescription>
<para>Locks for write operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="64" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/lock.cc" bodystart="101" bodyend="109"/>
        <references refid="lock_8h_1a0c4f2a10324c79411362512f1e8e73c4" compoundref="lock_8h" startline="18">MUTEX</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a9e2c96682ba1862a83ad26b8283c669e" compoundref="lock_8h" startline="55">m_writers</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a69e3d84b1701c831e098707980cb3b48" compoundref="lock_8h" startline="54">m_readers</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a8c38826dae6f0ead4164b11be11b9a5b" compoundref="lock_8h" startline="52">m_classCond</references>
        <referencedby refid="classveil_1_1client_1_1AutoLock_1a7d95d6c91bec1806728a9ef6d65c2c15" compoundref="lock_8cc" startline="28" endline="42">veil::client::AutoLock::changeType</referencedby>
        <referencedby refid="classveil_1_1client_1_1AutoLock_1ad99d6f0e4a8b61f58127d9bba3924d6a" compoundref="lock_8cc" startline="55" endline="64">veil::client::AutoLock::lock</referencedby>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1ReadWriteLock_1ae0f828f776cab85c7ab455f240c87bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void veil::client::ReadWriteLock::writeUnlock</definition>
        <argsstring>()</argsstring>
        <name>writeUnlock</name>
        <briefdescription>
<para>&lt; Unlocks write lock </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="65" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/lock.cc" bodystart="111" bodyend="117"/>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a818f923768a5fadb25efef2d9945bb44" compoundref="lock_8h" startline="56">m_fairness</references>
        <references refid="classveil_1_1client_1_1ReadWriteLock_1a8c38826dae6f0ead4164b11be11b9a5b" compoundref="lock_8h" startline="52">m_classCond</references>
        <references refid="lock_8h_1a0c4f2a10324c79411362512f1e8e73c4" compoundref="lock_8h" startline="18">MUTEX</references>
        <referencedby refid="classveil_1_1client_1_1AutoLock_1a7d95d6c91bec1806728a9ef6d65c2c15" compoundref="lock_8cc" startline="28" endline="42">veil::client::AutoLock::changeType</referencedby>
        <referencedby refid="classveil_1_1client_1_1AutoLock_1a1c941a2b476c9869537e3e6690b1baf3" compoundref="lock_8cc" startline="44" endline="53">veil::client::AutoLock::release</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classveil_1_1client_1_1ReadWriteLock" kindref="compound">ReadWriteLock</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para>Solves the &quot;library problem&quot; (fast thread-safe read access) <ref refid="classveil_1_1client_1_1ReadWriteLock" kindref="compound">ReadWriteLock</ref> should not be used directly. Use <ref refid="classveil_1_1client_1_1AutoLock" kindref="compound">AutoLock</ref> wrapper instead, for automatic lock release (using RAII) </para>    </detaileddescription>
    <location file="/home/krzysztof/Desktop/veilclient/include/lock.h" line="48" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/lock.h" bodystart="47" bodyend="66"/>
    <listofallmembers>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1a716ab0c62de5655dcf9b5efe988073c4" prot="private" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>DECLARE_MUTEX_FOR</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1a30d561f79e69a1f2598b834b89fe6560" prot="private" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>DECLARE_MUTEX_FOR</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1a8c38826dae6f0ead4164b11be11b9a5b" prot="private" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>m_classCond</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1a818f923768a5fadb25efef2d9945bb44" prot="private" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>m_fairness</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1a69e3d84b1701c831e098707980cb3b48" prot="private" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>m_readers</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1a9e2c96682ba1862a83ad26b8283c669e" prot="private" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>m_writers</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1ab5417066b530662f3c95c69f9a8a43e2" prot="public" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>readLock</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1aea77ddf8d924ebcef0558478a6f02d85" prot="public" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>readUnlock</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1aadaa3d68d5c9e78fefdfa51b6a69efdc" prot="public" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>ReadWriteLock</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1adee8b77278d87c9d9c064a09bef67f2f" prot="public" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>writeLock</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1ae0f828f776cab85c7ab455f240c87bfe" prot="public" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>writeUnlock</name></member>
      <member refid="classveil_1_1client_1_1ReadWriteLock_1ac290afacde98d4acfc19689940d6e465" prot="public" virt="non-virtual"><scope>veil::client::ReadWriteLock</scope><name>~ReadWriteLock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
