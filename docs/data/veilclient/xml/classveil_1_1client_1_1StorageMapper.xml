<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classveil_1_1client_1_1StorageMapper" kind="class" prot="public">
    <compoundname>veil::client::StorageMapper</compoundname>
    <basecompoundref refid="classveil_1_1client_1_1ISchedulable" prot="public" virt="non-virtual">veil::client::ISchedulable</basecompoundref>
    <includes refid="storageMapper_8h" local="no">include/storageMapper.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classveil_1_1client_1_1StorageMapper_1aa0fba5e494f633184f94ee367fa3f3a8" prot="protected" static="no" mutable="no">
        <type>std::map&lt; int, <ref refid="structveil_1_1client_1_1storageInfo" kindref="compound">storageInfo</ref> &gt;</type>
        <definition>std::map&lt;int, storageInfo&gt; veil::client::StorageMapper::m_storageMapping</definition>
        <argsstring></argsstring>
        <name>m_storageMapping</name>
        <briefdescription>
<para>Contains storage info accessd by its ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structveil_1_1client_1_1storageInfo" kindref="compound">storageInfo</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="61" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" bodystart="61" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a24fde125b0005d945deb54a12fefe687" compoundref="storageMapper_8cc" startline="33" endline="61">getLocationInfo</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1ae03feeacef81b0cf5f6418f926897aef" compoundref="storageMapper_8cc" startline="79" endline="105">addLocation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classveil_1_1client_1_1StorageMapper_1a22ad0d96ac8422fcea24a605378513ee" prot="protected" static="no" mutable="no">
        <type><ref refid="classveil_1_1client_1_1ReadWriteLock" kindref="compound">ReadWriteLock</ref></type>
        <definition>ReadWriteLock veil::client::StorageMapper::m_storageMappingLock</definition>
        <argsstring></argsstring>
        <name>m_storageMappingLock</name>
        <briefdescription>
<para>Lock used while operating on <ref refid="classveil_1_1client_1_1StorageMapper_1aa0fba5e494f633184f94ee367fa3f3a8" kindref="member">StorageMapper::m_storageMapping</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classveil_1_1client_1_1StorageMapper_1aa0fba5e494f633184f94ee367fa3f3a8" kindref="member">StorageMapper::m_storageMapping</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="62" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" bodystart="62" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a24fde125b0005d945deb54a12fefe687" compoundref="storageMapper_8cc" startline="33" endline="61">getLocationInfo</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1ae03feeacef81b0cf5f6418f926897aef" compoundref="storageMapper_8cc" startline="79" endline="105">addLocation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="structveil_1_1client_1_1locationInfo" kindref="compound">locationInfo</ref> &gt;</type>
        <definition>std::map&lt;std::string, locationInfo&gt; veil::client::StorageMapper::m_fileMapping</definition>
        <argsstring></argsstring>
        <name>m_fileMapping</name>
        <briefdescription>
<para>Contains storage info accessd by its ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structveil_1_1client_1_1storageInfo" kindref="compound">storageInfo</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="63" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" bodystart="63" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a24fde125b0005d945deb54a12fefe687" compoundref="storageMapper_8cc" startline="33" endline="61">getLocationInfo</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1ae03feeacef81b0cf5f6418f926897aef" compoundref="storageMapper_8cc" startline="79" endline="105">addLocation</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a8d3e1e4ee9beff5fc9a9bd960f13090b" compoundref="storageMapper_8cc" startline="107" endline="116">openFile</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1ad60be094005d5b82195cf3e53899692c" compoundref="storageMapper_8cc" startline="118" endline="133">releaseFile</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a29ce4dc7dce914ce6e127f84183beda5" compoundref="storageMapper_8cc" startline="135" endline="176">runTask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classveil_1_1client_1_1StorageMapper_1a85e6e576531ae0d2b549546053f08db1" prot="protected" static="no" mutable="no">
        <type><ref refid="classveil_1_1client_1_1ReadWriteLock" kindref="compound">ReadWriteLock</ref></type>
        <definition>ReadWriteLock veil::client::StorageMapper::m_fileMappingLock</definition>
        <argsstring></argsstring>
        <name>m_fileMappingLock</name>
        <briefdescription>
<para>Lock used while operationg on <ref refid="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" kindref="member">StorageMapper::m_fileMapping</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" kindref="member">StorageMapper::m_fileMapping</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="64" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" bodystart="64" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a24fde125b0005d945deb54a12fefe687" compoundref="storageMapper_8cc" startline="33" endline="61">getLocationInfo</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1ae03feeacef81b0cf5f6418f926897aef" compoundref="storageMapper_8cc" startline="79" endline="105">addLocation</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a8d3e1e4ee9beff5fc9a9bd960f13090b" compoundref="storageMapper_8cc" startline="107" endline="116">openFile</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1ad60be094005d5b82195cf3e53899692c" compoundref="storageMapper_8cc" startline="118" endline="133">releaseFile</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a29ce4dc7dce914ce6e127f84183beda5" compoundref="storageMapper_8cc" startline="135" endline="176">runTask</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classveil_1_1client_1_1StorageMapper_1a5dab01bc1aeef6a5af71abe6208bcd56" prot="protected" static="no" mutable="no">
        <type>boost::shared_ptr&lt; <ref refid="classveil_1_1client_1_1FslogicProxy" kindref="compound">FslogicProxy</ref> &gt;</type>
        <definition>boost::shared_ptr&lt;FslogicProxy&gt; veil::client::StorageMapper::m_fslogic</definition>
        <argsstring></argsstring>
        <name>m_fslogic</name>
        <briefdescription>
<para>Reference to <ref refid="classveil_1_1client_1_1FslogicProxy" kindref="compound">FslogicProxy</ref> instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classveil_1_1client_1_1VeilFS_1ab9d8ae0284b8efa1ace6c5ca00dd3963" kindref="member">VeilFS::m_fslogic</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="66" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" bodystart="66" bodyend="-1"/>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a72389fa2cf1f3aefdfa087ce35e9a049" compoundref="storageMapper_8cc" startline="63" endline="77">findLocation</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1ad60be094005d5b82195cf3e53899692c" compoundref="storageMapper_8cc" startline="118" endline="133">releaseFile</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a29ce4dc7dce914ce6e127f84183beda5" compoundref="storageMapper_8cc" startline="135" endline="176">runTask</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classveil_1_1client_1_1StorageMapper_1ab63c9661090a969e6329d0aae383340c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>veil::client::StorageMapper::StorageMapper</definition>
        <argsstring>(boost::shared_ptr&lt; FslogicProxy &gt; fslogicProxy)</argsstring>
        <name>StorageMapper</name>
        <param>
          <type>boost::shared_ptr&lt; <ref refid="classveil_1_1client_1_1FslogicProxy" kindref="compound">FslogicProxy</ref> &gt;</type>
          <declname>fslogicProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="70" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/storageMapper.cc" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1StorageMapper_1aed052a291494286105dc2a906f9908e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>veil::client::StorageMapper::~StorageMapper</definition>
        <argsstring>()</argsstring>
        <name>~StorageMapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="71" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/storageMapper.cc" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1StorageMapper_1a24fde125b0005d945deb54a12fefe687" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::pair&lt; <ref refid="structveil_1_1client_1_1locationInfo" kindref="compound">locationInfo</ref>, <ref refid="structveil_1_1client_1_1storageInfo" kindref="compound">storageInfo</ref> &gt;</type>
        <definition>pair&lt; locationInfo, storageInfo &gt; veil::client::StorageMapper::getLocationInfo</definition>
        <argsstring>(std::string logical_name, bool useCluster=false)</argsstring>
        <name>getLocationInfo</name>
        <param>
          <type>std::string</type>
          <declname>logical_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useCluster</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets file location information along with storage info for storage heleper&apos;s calls. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logical_name</parametername>
</parameternamelist>
<parameterdescription>
<para>File path (relative to <ref refid="classveil_1_1client_1_1VeilFS" kindref="compound">VeilFS</ref> mount point) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useCluster</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify if the method should use cache only (deafault) or try quering cluster. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::pair of <ref refid="structveil_1_1client_1_1locationInfo" kindref="compound">locationInfo</ref> and <ref refid="structveil_1_1client_1_1storageInfo" kindref="compound">storageInfo</ref> structs for this file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="79" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/storageMapper.cc" bodystart="33" bodyend="61"/>
        <references refid="classveil_1_1client_1_1StorageMapper_1a85e6e576531ae0d2b549546053f08db1" compoundref="storageMapper_8h" startline="64">m_fileMappingLock</references>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a378617bc95058da3e7787e260ee8b922" compoundref="lock_8h" startline="37">veil::client::READ_LOCK</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" compoundref="storageMapper_8h" startline="63">m_fileMapping</references>
        <references refid="classveil_1_1client_1_1AutoLock_1a1c941a2b476c9869537e3e6690b1baf3" compoundref="lock_8cc" startline="44" endline="53">veil::client::AutoLock::release</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a72389fa2cf1f3aefdfa087ce35e9a049" compoundref="storageMapper_8cc" startline="63" endline="77">findLocation</references>
        <references refid="classveil_1_1client_1_1AutoLock_1ad99d6f0e4a8b61f58127d9bba3924d6a" compoundref="lock_8cc" startline="55" endline="64">veil::client::AutoLock::lock</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a22ad0d96ac8422fcea24a605378513ee" compoundref="storageMapper_8h" startline="62">m_storageMappingLock</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1aa0fba5e494f633184f94ee367fa3f3a8" compoundref="storageMapper_8h" startline="61">m_storageMapping</references>
        <references refid="structveil_1_1client_1_1locationInfo_1a796797a492217ed14a0ee08de5bc925f" compoundref="storageMapper_8h" startline="31">veil::client::locationInfo::storageId</references>
        <references refid="structveil_1_1client_1_1locationInfo_1af3e064ffb277c4a4cf7e9f4e955574b2" compoundref="storageMapper_8h" startline="32">veil::client::locationInfo::fileId</references>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1StorageMapper_1a72389fa2cf1f3aefdfa087ce35e9a049" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>string veil::client::StorageMapper::findLocation</definition>
        <argsstring>(std::string logicalName)</argsstring>
        <name>findLocation</name>
        <param>
          <type>std::string</type>
          <declname>logicalName</declname>
        </param>
        <briefdescription>
<para>Query cluster about file location and instert it to cache. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classveil_1_1client_1_1StorageMapper_1ae03feeacef81b0cf5f6418f926897aef" kindref="member">StorageMapper::addLocation</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="80" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/storageMapper.cc" bodystart="63" bodyend="77"/>
        <references refid="classveil_1_1client_1_1StorageMapper_1a5dab01bc1aeef6a5af71abe6208bcd56" compoundref="storageMapper_8h" startline="66">m_fslogic</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1ae03feeacef81b0cf5f6418f926897aef" compoundref="storageMapper_8cc" startline="79" endline="105">addLocation</references>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a24fde125b0005d945deb54a12fefe687" compoundref="storageMapper_8cc" startline="33" endline="61">getLocationInfo</referencedby>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a29ce4dc7dce914ce6e127f84183beda5" compoundref="storageMapper_8cc" startline="135" endline="176">runTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1StorageMapper_1ae03feeacef81b0cf5f6418f926897aef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void veil::client::StorageMapper::addLocation</definition>
        <argsstring>(std::string logicalName, protocol::fuse_messages::FileLocation location)</argsstring>
        <name>addLocation</name>
        <param>
          <type>std::string</type>
          <declname>logicalName</declname>
        </param>
        <param>
          <type>protocol::fuse_messages::FileLocation</type>
          <declname>location</declname>
        </param>
        <briefdescription>
<para>Cache given file location. </para>        </briefdescription>
        <detaileddescription>
<para>Insert to file location cache new FileLocation received from cluster. </para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>: last_updated field should be fetched from cluster </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="81" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/storageMapper.cc" bodystart="79" bodyend="105"/>
        <references refid="structveil_1_1client_1_1locationInfo_1ac27768fe7cfe3d4013badeedc2a94739" compoundref="storageMapper_8h" startline="36">veil::client::locationInfo::validTo</references>
        <references refid="structveil_1_1client_1_1storageInfo_1a8e713cee89c15ad808a51d94fe5102dc" compoundref="storageMapper_8h" startline="47">veil::client::storageInfo::last_updated</references>
        <references refid="structveil_1_1client_1_1storageInfo_1adeefd419b53247a4c966daa48dd2bd83" compoundref="storageMapper_8h" startline="48">veil::client::storageInfo::storageHelperName</references>
        <references refid="structveil_1_1client_1_1storageInfo_1a4085fa76276ba7fca00a769422f4cd90" compoundref="storageMapper_8h" startline="49">veil::client::storageInfo::storageHelperArgs</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a85e6e576531ae0d2b549546053f08db1" compoundref="storageMapper_8h" startline="64">m_fileMappingLock</references>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a74a5d68dec5afbdd21d9e18d2e6da9b6" compoundref="lock_8h" startline="38">veil::client::WRITE_LOCK</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" compoundref="storageMapper_8h" startline="63">m_fileMapping</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a22ad0d96ac8422fcea24a605378513ee" compoundref="storageMapper_8h" startline="62">m_storageMappingLock</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1aa0fba5e494f633184f94ee367fa3f3a8" compoundref="storageMapper_8h" startline="61">m_storageMapping</references>
        <references refid="classveil_1_1client_1_1VeilFS_1afe20f8ab6077591be6901a2fcf326e0c" compoundref="veilfs_8cc" startline="666" endline="685">veil::client::VeilFS::getScheduler</references>
        <references refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac62e13997a39b21ee57c98efdbc12826" compoundref="ISchedulable_8h" startline="36">veil::client::ISchedulable::TASK_REMOVE_EXPIRED_LOCATON_MAPPING</references>
        <references refid="fslogicProxy_8h_1a29c54853122e1194e51754a5f0ef37a7" compoundref="fslogicProxy_8h" startline="27">RENEW_LOCATION_MAPPING_TIME</references>
        <references refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca5ff3ad4ffdf1a48962fa88c183ddd253" compoundref="ISchedulable_8h" startline="35">veil::client::ISchedulable::TASK_RENEW_LOCATION_MAPPING</references>
        <referencedby refid="classveil_1_1client_1_1StorageMapper_1a72389fa2cf1f3aefdfa087ce35e9a049" compoundref="storageMapper_8cc" startline="63" endline="77">findLocation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1StorageMapper_1a8d3e1e4ee9beff5fc9a9bd960f13090b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void veil::client::StorageMapper::openFile</definition>
        <argsstring>(std::string logicalName)</argsstring>
        <name>openFile</name>
        <param>
          <type>std::string</type>
          <declname>logicalName</declname>
        </param>
        <briefdescription>
<para>Increases open file count for specified file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structveil_1_1client_1_1locationInfo_1a7c4fc771ccc1263c9ada6dd20671d2d4" kindref="member">locationInfo::opened</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="83" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/storageMapper.cc" bodystart="107" bodyend="116"/>
        <references refid="classveil_1_1client_1_1StorageMapper_1a85e6e576531ae0d2b549546053f08db1" compoundref="storageMapper_8h" startline="64">m_fileMappingLock</references>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a74a5d68dec5afbdd21d9e18d2e6da9b6" compoundref="lock_8h" startline="38">veil::client::WRITE_LOCK</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" compoundref="storageMapper_8h" startline="63">m_fileMapping</references>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1StorageMapper_1ad60be094005d5b82195cf3e53899692c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void veil::client::StorageMapper::releaseFile</definition>
        <argsstring>(std::string logicalName)</argsstring>
        <name>releaseFile</name>
        <param>
          <type>std::string</type>
          <declname>logicalName</declname>
        </param>
        <briefdescription>
<para>Decreases open file count for specified file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structveil_1_1client_1_1locationInfo_1a7c4fc771ccc1263c9ada6dd20671d2d4" kindref="member">locationInfo::opened</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="84" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/storageMapper.cc" bodystart="118" bodyend="133"/>
        <references refid="classveil_1_1client_1_1StorageMapper_1a85e6e576531ae0d2b549546053f08db1" compoundref="storageMapper_8h" startline="64">m_fileMappingLock</references>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a74a5d68dec5afbdd21d9e18d2e6da9b6" compoundref="lock_8h" startline="38">veil::client::WRITE_LOCK</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" compoundref="storageMapper_8h" startline="63">m_fileMapping</references>
        <references refid="classveil_1_1client_1_1VeilFS_1afe20f8ab6077591be6901a2fcf326e0c" compoundref="veilfs_8cc" startline="666" endline="685">veil::client::VeilFS::getScheduler</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a5dab01bc1aeef6a5af71abe6208bcd56" compoundref="storageMapper_8h" startline="66">m_fslogic</references>
        <references refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac335b02a928670de1ce08a81b2c581db" compoundref="ISchedulable_8h" startline="34">veil::client::ISchedulable::TASK_SEND_FILE_NOT_USED</references>
      </memberdef>
      <memberdef kind="function" id="classveil_1_1client_1_1StorageMapper_1a29ce4dc7dce914ce6e127f84183beda5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool veil::client::StorageMapper::runTask</definition>
        <argsstring>(TaskID taskId, std::string arg0, std::string arg1, std::string arg3)</argsstring>
        <name>runTask</name>
        <reimplements refid="classveil_1_1client_1_1ISchedulable_1ac81de45c4664e8aec85d42a6992c23e0">runTask</reimplements>
        <param>
          <type><ref refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68c" kindref="member">TaskID</ref></type>
          <declname>taskId</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg0</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
<para>Task runner derived from <ref refid="classveil_1_1client_1_1ISchedulable" kindref="compound">ISchedulable</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classveil_1_1client_1_1ISchedulable_1ac81de45c4664e8aec85d42a6992c23e0" kindref="member">ISchedulable::runTask</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="86" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/src/storageMapper.cc" bodystart="135" bodyend="176"/>
        <references refid="classveil_1_1client_1_1StorageMapper_1a85e6e576531ae0d2b549546053f08db1" compoundref="storageMapper_8h" startline="64">m_fileMappingLock</references>
        <references refid="namespaceveil_1_1client_1a86124671530b503e3884741ce6c8b128a74a5d68dec5afbdd21d9e18d2e6da9b6" compoundref="lock_8h" startline="38">veil::client::WRITE_LOCK</references>
        <references refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac62e13997a39b21ee57c98efdbc12826" compoundref="ISchedulable_8h" startline="36">veil::client::ISchedulable::TASK_REMOVE_EXPIRED_LOCATON_MAPPING</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" compoundref="storageMapper_8h" startline="63">m_fileMapping</references>
        <references refid="classveil_1_1client_1_1VeilFS_1afe20f8ab6077591be6901a2fcf326e0c" compoundref="veilfs_8cc" startline="666" endline="685">veil::client::VeilFS::getScheduler</references>
        <references refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca5ff3ad4ffdf1a48962fa88c183ddd253" compoundref="ISchedulable_8h" startline="35">veil::client::ISchedulable::TASK_RENEW_LOCATION_MAPPING</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a5dab01bc1aeef6a5af71abe6208bcd56" compoundref="storageMapper_8h" startline="66">m_fslogic</references>
        <references refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca5d7a79cedeac53743c9ca3e4f0a83246" compoundref="ISchedulable_8h" startline="38">veil::client::ISchedulable::TASK_ASYNC_GET_FILE_LOCATION</references>
        <references refid="classveil_1_1client_1_1StorageMapper_1a72389fa2cf1f3aefdfa087ce35e9a049" compoundref="storageMapper_8cc" startline="63" endline="77">findLocation</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="173">
        <label>boost::enable_shared_from_this&lt; ISchedulable &gt;</label>
      </node>
      <node id="172">
        <label>veil::client::ISchedulable</label>
        <link refid="classveil_1_1client_1_1ISchedulable"/>
        <childnode refid="173" relation="public-inheritance">
        </childnode>
      </node>
      <node id="171">
        <label>veil::client::StorageMapper</label>
        <link refid="classveil_1_1client_1_1StorageMapper"/>
        <childnode refid="172" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="176">
        <label>boost::enable_shared_from_this&lt; ISchedulable &gt;</label>
      </node>
      <node id="181">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="178">
        <label>std::map&lt; std::string, veil::client::locationInfo &gt;</label>
        <childnode refid="179" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="180" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="184">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="180" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="183">
        <label>veil::client::storageInfo</label>
        <link refid="structveil_1_1client_1_1storageInfo"/>
        <childnode refid="180" relation="usage">
          <edgelabel>storageHelperName</edgelabel>
        </childnode>
        <childnode refid="184" relation="usage">
          <edgelabel>storageHelperArgs</edgelabel>
        </childnode>
      </node>
      <node id="175">
        <label>veil::client::ISchedulable</label>
        <link refid="classveil_1_1client_1_1ISchedulable"/>
        <childnode refid="176" relation="public-inheritance">
        </childnode>
      </node>
      <node id="174">
        <label>veil::client::StorageMapper</label>
        <link refid="classveil_1_1client_1_1StorageMapper"/>
        <childnode refid="175" relation="public-inheritance">
        </childnode>
        <childnode refid="177" relation="usage">
          <edgelabel>m_storageMappingLock</edgelabel>
          <edgelabel>m_fileMappingLock</edgelabel>
        </childnode>
        <childnode refid="178" relation="usage">
          <edgelabel>m_fileMapping</edgelabel>
        </childnode>
        <childnode refid="182" relation="usage">
          <edgelabel>m_storageMapping</edgelabel>
        </childnode>
      </node>
      <node id="179">
        <label>veil::client::locationInfo</label>
        <link refid="structveil_1_1client_1_1locationInfo"/>
        <childnode refid="180" relation="usage">
          <edgelabel>fileId</edgelabel>
        </childnode>
      </node>
      <node id="182">
        <label>std::map&lt; int, veil::client::storageInfo &gt;</label>
        <childnode refid="183" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="177">
        <label>veil::client::ReadWriteLock</label>
        <link refid="classveil_1_1client_1_1ReadWriteLock"/>
      </node>
      <node id="180">
        <label>std::string</label>
        <childnode refid="181" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" line="58" column="1" bodyfile="/home/krzysztof/Desktop/veilclient/include/storageMapper.h" bodystart="57" bodyend="88"/>
    <listofallmembers>
      <member refid="classveil_1_1client_1_1StorageMapper_1ae03feeacef81b0cf5f6418f926897aef" prot="public" virt="virtual"><scope>veil::client::StorageMapper</scope><name>addLocation</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1a72389fa2cf1f3aefdfa087ce35e9a049" prot="public" virt="virtual"><scope>veil::client::StorageMapper</scope><name>findLocation</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1a24fde125b0005d945deb54a12fefe687" prot="public" virt="virtual"><scope>veil::client::StorageMapper</scope><name>getLocationInfo</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a1971032ea8f78ff6345864c4e40d86bd" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>ISchedulable</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1a2d8904d09425bc6cd989a2f9f2bd0e69" prot="protected" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>m_fileMapping</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1a85e6e576531ae0d2b549546053f08db1" prot="protected" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>m_fileMappingLock</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1a5dab01bc1aeef6a5af71abe6208bcd56" prot="protected" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>m_fslogic</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1aa0fba5e494f633184f94ee367fa3f3a8" prot="protected" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>m_storageMapping</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1a22ad0d96ac8422fcea24a605378513ee" prot="protected" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>m_storageMappingLock</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1a8d3e1e4ee9beff5fc9a9bd960f13090b" prot="public" virt="virtual"><scope>veil::client::StorageMapper</scope><name>openFile</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1ad60be094005d5b82195cf3e53899692c" prot="public" virt="virtual"><scope>veil::client::StorageMapper</scope><name>releaseFile</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1a29ce4dc7dce914ce6e127f84183beda5" prot="public" virt="virtual"><scope>veil::client::StorageMapper</scope><name>runTask</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1ab63c9661090a969e6329d0aae383340c" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>StorageMapper</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca5d7a79cedeac53743c9ca3e4f0a83246" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_ASYNC_GET_FILE_LOCATION</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac37d99797b742148014ece1b04070abd" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_ASYNC_GETATTR</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68caecf889af461568a10f6ecb5494d6287a" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_ASYNC_READDIR</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca6266ee7d508841ea9fc2418b40b47678" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_ASYNC_UPDATE_TIMES</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca8e8d2679b3902b3d4adb3afc265ae593" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_CLEAR_ATTR</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cab491b54b9730aaf11720b9847b0184c3" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_CLEAR_FILE_ATTR</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca9ba4bbf3c2c44cfcf351216bf7e4c42f" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_CONNECTION_HANDSHAKE</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cae14315bcb7937f992b1d6b503981ff18" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_LAST_ID</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca64e79be1054c363dd73740130b88aa53" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_PING_CLUSTER</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac62e13997a39b21ee57c98efdbc12826" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_REMOVE_EXPIRED_LOCATON_MAPPING</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68ca5ff3ad4ffdf1a48962fa88c183ddd253" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_RENEW_LOCATION_MAPPING</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68cac335b02a928670de1ce08a81b2c581db" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TASK_SEND_FILE_NOT_USED</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a70326b701bdc40395d40098842d0d68c" prot="public" virt="non-virtual"><scope>veil::client::StorageMapper</scope><name>TaskID</name></member>
      <member refid="classveil_1_1client_1_1ISchedulable_1a1769e067935e32f90656086090a78548" prot="public" virt="virtual"><scope>veil::client::StorageMapper</scope><name>~ISchedulable</name></member>
      <member refid="classveil_1_1client_1_1StorageMapper_1aed052a291494286105dc2a906f9908e6" prot="public" virt="virtual"><scope>veil::client::StorageMapper</scope><name>~StorageMapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
