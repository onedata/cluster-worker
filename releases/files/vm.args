## Name of the node
-name {{node}}

## Cookie for distributed erlang
-setcookie veil_cluster_node

## Node type (worker or ccm)
## application:get_env(veil_cluster_node, nodeType) should return this
-veil_cluster_node node_type {{node_type}}

## How long (in sec) should worker sleep before next connection try (when it cannot connect to ccm)
## application:get_env(veil_cluster_node, heart_beat) should return this
-veil_cluster_node heart_beat {{heart_beat}}

## List of ccm possible ccm nodes
## application:get_env(veil_cluster_node, ccm_nodes) should return this
-veil_cluster_node ccm_nodes {{ccm_nodes}}

## How long should ccm wait for workers before it initializes cluster
## application:get_env(veil_cluster_node, initialization_time) should return this
-veil_cluster_node initialization_time {{initialization_time}}

## List of all DBMS nodes
## application:get_env(veil_cluster_node, db_nodes) should return this
-veil_cluster_node db_nodes {{db_nodes}}

## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
## (Disabled by default..use with caution!)
##-heart

## Enable kernel poll and a few async threads
##+K true
##+A 5

## Treat error_logger warnings as warnings
+W w

## Increase number of concurrent ports/sockets
-env ERL_MAX_PORTS 4096

## Tweak GC to run more often
##-env ERL_FULLSWEEP_AFTER 10
