#!/bin/bash

function bad_args_error
{
	echo "Usage:" 
	echo "	$0 -worker worker1@host worker2@host ... -main_ccm main_ccm_node@host [-opt_ccm opt_ccm_node1@host opt_ccm_node2@host ...] -db_nodes dbnode1@host dbnode2@host ... [-start]"
	echo " "
	echo "or:"
	echo "	$0 [-start] (file 'gen_test.args' containing arguments present in script directory)"
	echo " "
	echo "adding option -start will cause the script to start test environment according to arguments, skipping release generation"
	exit 1	
}

if [ $# -lt 4 ] || [ $1 != "-worker" ]; then

	# Check for .args file
	if [ $# -lt 2 ] && [ -f gen_test.args ]; then
		ARGS=`cat gen_test.args`
		echo 'Using arguments from gen_test.args'
		if [ $# -eq 1 ] && [ $1 == "-start" ]; then
			./gen_test $ARGS -start
		elif [ $# -eq 0 ]; then
			./gen_test $ARGS
		else
			bad_args_error
		fi
		exit 0
	fi

	# Invalid arguments or absence of .args file
	bad_args_error
fi


for (( INDEX=2; INDEX<=$#; INDEX++ ))
do
	# List ends at -main_ccm 
	if [ ${!INDEX} == "-main_ccm" ]; then
		NEXT_LOOP_INDEX=$((INDEX + 2))
		INDEX_PLUS_ONE=$((INDEX + 1))

		# Check if required main CCM name occurs
		if [ $# -lt $INDEX_PLUS_ONE ]; then
			bad_args_error
		fi
		MAIN_CCM_NAME=${!INDEX_PLUS_ONE}

		# Append main ccm to node list
		NODE_LIST[(( INDEX - 2))]=$MAIN_CCM_NAME
		break
	fi

	# Append worker to node list
	NODE_LIST[(( INDEX - 2))]=${!INDEX}
done

DO_START=0
if [ ${!#} == "-start" ]; then
	DO_START=1
fi

for (( INDEX=$((NEXT_LOOP_INDEX + 1)); INDEX<=$#; INDEX++ ))
do
	if [ ${!INDEX} == '-db_nodes' ]; then		
		NEXT_LOOP_INDEX=$((INDEX + 1))
		break;
	fi
	OPT_CCM_LIST="$OPT_CCM_LIST ${!INDEX}"
	NODE_LIST[(( INDEX - 4))]=${!INDEX}
done

for (( INDEX=$NEXT_LOOP_INDEX; INDEX<=$#; INDEX++ ))
do
	DB_NODES_LIST="$DB_NODES_LIST ${!INDEX}"
done

if [ $DO_START -eq 0 ]; then
	for NODE in "${NODE_LIST[@]}"
	do
		AT_INDEX=`expr index "$NODE" @`
		NODE_NAME_WITHOUT_HOSTNAME=${NODE:0:(($AT_INDEX - 1))}
		echo " "
		echo "--------------------------------------------"
		echo "generating release for $NODE in   releases/$NODE_NAME_WITHOUT_HOSTNAME"
		echo " "
		make release_config args="-name $NODE -main_ccm $MAIN_CCM_NAME -opt_ccm $OPT_CCM_LIST -db_nodes $DB_NODES_LIST"

        if [ $? -ne 0 ]; then
            echo ""
            echo "Error during generation of a release. Make sure all dependencies are present in project directory."
            exit
        fi

		echo " "
		echo "done!"
	done	

	echo " "
	echo "Test environment successfully set up!" 

else
	echo " "
	echo "--------------------------------------------"
	echo " "
	for NODE in "${NODE_LIST[@]}"
	do
		AT_INDEX=`expr index "$NODE" @`
		NODE_NAME_WITHOUT_HOSTNAME=${NODE:0:(($AT_INDEX - 1))}
		echo "starting $NODE in   releases/$NODE_NAME_WITHOUT_HOSTNAME"
		make start_config node="$NODE_NAME_WITHOUT_HOSTNAME"

        if [ $? -ne 0 ]; then
            echo ""
            echo "Error during start of a node. Is the test environment ready?"
            exit
        fi
	done
	echo " "
	echo "Test environment successfully started!" 
fi


exit 0

